name: "MD593Autoencoder"

input: "data"
input_shape {
  dim: 1
  dim: 1
  dim: 100
  dim: 100
}

#conv1
layer {  
  bottom: "data" 
  top: "conv1" 
  name: "conv1"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 16
    stride: 1
    kernel_size: 11
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
    }
  }
}

#conv1
layer {  
  bottom: "conv1" 
  top: "conv2" 
  name: "conv2"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 16
    stride: 1
    kernel_size: 11
    weight_filler {
      type: "xavier" 
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
    }
  }
}

layer {
  bottom: "conv2"  
  top: "pool1" 
  top:"pool1_mask"
  name: "pool1"  
  type: "Pooling"
  pooling_param {    
    pool: MAX    
    kernel_size: 2
    stride: 2
  }
}

layer {  
  bottom: "pool1" 
  top: "conv3" 
  name: "conv3"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 32
    stride: 1
    kernel_size: 5
    weight_filler {
      type: "xavier" 
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
    }
  }
}

layer {  
  bottom: "conv3" 
  top: "conv4" 
  name: "conv4"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 32
    stride: 1
    kernel_size: 5
    weight_filler {
      type: "xavier" 
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
    }
  }
}

layer {
  bottom: "conv4"  
  top: "pool2" 
  top:"pool2_mask"
  name: "pool2"  
  type: "Pooling"
  pooling_param {    
    pool: MAX    
    kernel_size: 2
    stride: 2
  }
}


layer { type: "Unpooling"  bottom: "pool2"  bottom: "pool2_mask"  top: "unpool2"  name: "unpool1"
  unpooling_param {   
    unpool: MAX 
    kernel_size: 2
    stride: 2
    unpool_size:  32
  }
}

layer { bottom: 'unpool2' top: 'deconv4' name: 'deconv4' type: "Deconvolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { 
    num_output: 32
    kernel_size: 5
    stride: 1
    weight_filler {      type: "xavier"    }
    bias_filler {      type: "constant"      value: 0    }
  }
} 


layer { bottom: 'deconv4' top: 'deconv3' name: 'deconv3' type: "Deconvolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { 
    num_output: 16
    kernel_size: 5
    stride: 1
    weight_filler {      type: "xavier"    }
    bias_filler {      type: "constant"      value: 0    }
  }
} 

layer { type: "Unpooling"  bottom: "deconv3"  bottom: "pool1_mask"  top: "unpool1"  name: "unpool1"
  unpooling_param {   
    unpool: MAX 
    kernel_size: 2
    stride: 2
    unpool_size:  80
  }
}


layer { bottom: 'unpool1' top: 'deconv2' name: 'deconv2' type: "Deconvolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { 
    num_output: 16
    kernel_size: 11
    stride: 1
    weight_filler {      type: "xavier"    }
    bias_filler {      type: "constant"      value: 0    }
  }
} 



layer { bottom: 'deconv2' top: 'deconv1' name: 'deconv1' type: "Deconvolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { 
    num_output: 1
    kernel_size: 11
    stride: 1
    weight_filler {      type: "xavier"     }
    bias_filler {      type: "constant"      value: 0    }
  } 
}


